<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	
	

		
	<http auto-config="true">
		<csrf disabled="true"/> 
		<intercept-url pattern = "classpath:/META-INF/resources/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern = "/swagger-ui.html" access="permitAll"/>
		<intercept-url pattern = "/resources/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern = "/webjars/**" access="hasRole('ADMIN')"/>
		<intercept-url pattern = "classpath:/META-INF/resources/webjars/" access="hasRole('ADMIN')"/>
		<intercept-url pattern = "/mypage/**" access="hasRole('USER')"/>
		<intercept-url pattern = "/booking/**" access="hasRole('USER')"/>
		<intercept-url pattern = "/search/**" access="permitAll"/>
		<intercept-url pattern = "/member/**" access="permitAll"/>
		<intercept-url pattern = "/singin" access="permitAll"/>
		<intercept-url pattern = "/signup" access="permitAll"/>
		<intercept-url pattern = "/signout" access="hashRole('USER')"/>
	</http>

	<authentication-manager>
		<authentication-provider>
				<user-service>
					<!--  Password is prefixed with {noop} to indicate to DelegatingPasswordEncoder that
					NoOpPasswordEncoder should be used. This is not safe for production, but makes reading
					in samples easier. Normally passwords should be hashed using BCrypt  -->
					<user name="kitchen" password="kitchen" authorities="ROLE_ADMIN, ROLE_USER" />
				</user-service>
		</authentication-provider>
	</authentication-manager>
	
</b:beans>